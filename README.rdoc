testing specs for recipes
name: string
summary: text
description: text

- name must be present
- name must be between 5 characters and 100 characters
- summary must be present
- summary must be between 10 and 150 characters
- description must be present
- description must be between 20 and 500 characters
- chef_id must be present

Testing specs for chef model
name: string
email: string

- chefname must be present
- checfname must be between 3 characters and less than 40 characters
- email must be present
- email must be unique (since we will use this for login later)
- email must be valid

Chefs:

What we have
- Chef model and validations
- Chef table with chefname and email

What we need to do
- Add passwords to the chef table so that the chef can be authenticated and logged in
- Use email as login credentials since email is unique
- Ability to register new chefs to use app
- Ability to display chef profile
- Ability to list all the chefs
- Ability for the chefs to login and log out
- Restrict create recipe, update recipe and like feature only to logged in chefs
- Restricting edit of recipes by chef who created the recipes

Authentication updates
- Show recipe page --> Ability to edit/update own recipe
- Navigation partial --> Toggle Menu, Restrict new
- Restrict thumbs up and thumbs down only to logged in user
- Recipe - update to current_user
- Like - update to current user
- Before_action - require_user, except: [:show, :index]
- Before_action - :require_same_user for chef, only: [:edit, :update]

Building review functionality
- Migration to create reviews table body, text area, chef id and recipe id
- Need to build Review model
- Write the tests and validation to the review model
- Build Asscociations, has_many and belongs_to
- Test associations in rails console
- recipe.reviews
- chef.reviews
- reviews in show.html of recipe
- nested like like which is created for the routes
- only authenticated chefs can add reviews - before action require user
- associate chef id and recipe id for review
- Use exiting code if possible
- 
